syntax = "proto3";

option go_package = "pmtstm.v1;pmtstmv1";

package billing;

import "billing/shared.proto";
import "google/protobuf/empty.proto";

service RoleService {
  rpc CreateRelation (CreateRelationRequest) returns (google.protobuf.Empty);
  rpc DeleteRelation (DeleteRelationRequest) returns (google.protobuf.Empty);
  rpc AssignPermission (AssignPermissionRequest) returns (google.protobuf.Empty);
  rpc RevokePermission (RevokePermissionRequest) returns (google.protobuf.Empty);
  rpc CheckPermission (CheckPermissionRequest) returns (CheckPermissionResponse);
  rpc GetAllPermissions (google.protobuf.Empty) returns (GetAllPermissionsResponse);
  rpc GetUserRelations (GetUserRelationsRequest) returns (GetUserRelationsResponse);
  rpc GetUserPermissions (GetUserPermissionsRequest) returns (GetUserPermissionsResponse);
  rpc GetPermissionsForRelationType (GetPermissionsForRelationTypeRequest) returns (GetPermissionsForRelationTypeResponse);
}

message CreateEntityRequest {
  UUID id = 1;
  string entity_type = 2;
}

message DeleteEntityRequest {
  UUID id = 1;
}

message CreateRelationRequest {
  UUID source_id = 1;
  UUID target_id = 2;
  string relation_type = 3;
}

message DeleteRelationRequest {
  UUID source_id = 1;
  UUID target_id = 2;
  string relation_type = 3;
}

message AddPermissionRequest {
  string name = 1;
  string description = 2;
}

message AddPermissionResponse {
  UUID permission_id = 1;
}

message AssignPermissionRequest {
  UUID permission_id = 1;
  string relation_type = 2;
}

message RevokePermissionRequest {
  UUID permission_id = 1;
  string relation_type = 2;
}

message CheckPermissionRequest {
  UUID subject_id = 1;
  UUID object_id = 2;
  string name = 3;
}

message CheckPermissionResponse {
  bool has_permission = 1;
}

message GetPermissionByNameRequest{
  string name = 1;
}

message GetPermissionByNameResponse{
  Permission permission = 1;
}

message GetAllPermissionsResponse {
  repeated Permission permissions = 1;
}

message GetUserRelationsRequest {
  UUID user_id = 1;
}

message GetUserRelationsResponse {
  repeated Relation relations = 1;
}

message GetUserPermissionsRequest {
  UUID user_id = 1;
}

message GetUserPermissionsResponse {
  repeated Permission permissions = 1;
}

message GetPermissionsForRelationTypeRequest {
  string relation_type = 1;
}

message GetPermissionsForRelationTypeResponse {
  repeated Permission permissions = 1;
}

message GetEntityRelationsRequest {
  UUID entity_id = 1;
}

message GetEntityRelationsResponse {
  repeated Relation relations = 1;
}